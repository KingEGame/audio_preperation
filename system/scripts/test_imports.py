#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é audio
audio_module_path = Path(__file__).parent / 'audio'
sys.path.append(str(audio_module_path))

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –∏–º–ø–æ—Ä—Ç—ã –∏–∑ –º–æ–¥—É–ª—è audio"""
    
    print("Testing imports from audio module...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
        print("1. Testing managers...")
        from audio import GPUMemoryManager, ModelManager
        print("   ‚úì GPUMemoryManager, ModelManager imported successfully")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–≤
        print("2. Testing processors...")
        from audio import (
            process_audio_file_optimized,
            process_multiple_files_parallel_optimized,
            process_file_multithreaded_optimized
        )
        print("   ‚úì All processor functions imported successfully")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç —ç—Ç–∞–ø–æ–≤
        print("3. Testing stages...")
        from audio import (
            clean_audio_with_demucs_optimized,
            diarize_with_pyannote_optimized
        )
        print("   ‚úì All stage functions imported successfully")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç —Å–ø–ª–∏—Ç—Ç–µ—Ä–æ–≤
        print("4. Testing splitters...")
        from audio import (
            split_audio_by_duration_optimized,
            split_audio_at_word_boundary_optimized,
            split_audio_smart_multithreaded_optimized
        )
        print("   ‚úì All splitter functions imported successfully")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç —É—Ç–∏–ª–∏—Ç
        print("5. Testing utils...")
        from audio import (
            get_mp3_duration,
            setup_logging,
            copy_results_to_output_optimized,
            parallel_audio_processing_optimized
        )
        print("   ‚úì All utility functions imported successfully")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        print("6. Testing config...")
        from audio import (
            get_optimal_workers,
            setup_gpu_optimization,
            MAX_WORKERS,
            GPU_MEMORY_LIMIT,
            BATCH_SIZE
        )
        print("   ‚úì All config functions and constants imported successfully")
        
        print("\nüéâ ALL IMPORTS SUCCESSFUL! üéâ")
        return True
        
    except ImportError as e:
        print(f"‚ùå Import error: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Unexpected error: {e}")
        return False

def test_config_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –∏–∑ config.py"""
    
    print("\nTesting imports from config.py...")
    
    try:
        from config import get_token, token_exists, ensure_directories
        print("   ‚úì All config functions imported successfully")
        return True
    except ImportError as e:
        print(f"‚ùå Config import error: {e}")
        return False

if __name__ == "__main__":
    print("=" * 60)
    print("IMPORT TESTING")
    print("=" * 60)
    
    audio_success = test_imports()
    config_success = test_config_imports()
    
    print("\n" + "=" * 60)
    print("SUMMARY")
    print("=" * 60)
    
    if audio_success and config_success:
        print("‚úÖ ALL TESTS PASSED - All imports are working correctly!")
    else:
        print("‚ùå SOME TESTS FAILED - Check the errors above")
    
    print("=" * 60) 